---
import type { LinkProps } from '@/components/Link.astro';

import NavLink from '@/components/NavLink.astro';
import Link from '@/components/Link.astro';
import ThemeToggle from '@/components/ThemeToggle.astro';

type Props = {
  links: LinkProps[];
  resume: LinkProps;
};

const { links, resume } = Astro.props;
---

<dialog
  id="menu"
  aria-hidden="true"
  class="fixed z-40 mr-0 translate-x-full rounded-l-lg border-y border-l border-neutral/10 bg-primary/70 p-0 px-8 py-6 backdrop-blur-xl transition duration-300 backdrop:opacity-0"
>
  <nav aria-label="Main" class="flex flex-col items-center gap-8">
    {links.map((link) => <NavLink data-menu-link {...link} />)}
    <Link data-menu-link {...resume} />
    <ThemeToggle />
  </nav>
</dialog>

<style>
  #menu[aria-hidden='false'] {
    @apply translate-x-0;
  }
</style>

<script>
  const menu = document.getElementById('menu') as HTMLDialogElement;

  const button = document.getElementById('menu-button') as HTMLButtonElement;

  let timeout: ReturnType<typeof setTimeout>;

  const handleClick = (event: MouseEvent) => {
    const { clientX, clientY, target } = event;
    const { left, right, top, bottom } = menu.getBoundingClientRect();

    if (
      clientX < left ||
      clientX > right ||
      clientY < top ||
      clientY > bottom ||
      (target as HTMLElement).hasAttribute('data-menu-link')
    ) {
      menu.setAttribute('aria-hidden', 'true');
      button.setAttribute('aria-expanded', 'false');
      clearTimeout(timeout);
      timeout = setTimeout(() => menu.close(), 300);
    }
  };

  menu.addEventListener('click', handleClick);
</script>
