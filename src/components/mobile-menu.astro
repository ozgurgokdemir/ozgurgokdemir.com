---
import NavBar from '@/components/nav-bar.astro';
import NavLink from '@/components/nav-link.astro';

type Props = {
  navigationLinks: {
    href: string;
    text: string;
  }[];
};

const { navigationLinks } = Astro.props;
---

<NavBar
  orientation="vertical"
  id="mobile-menu"
  class="group absolute right-2 top-[calc(var(--header-height)-0.5rem)] z-40 w-36 overflow-hidden rounded-xl border border-white/10 bg-black/60 py-3 backdrop-blur-lg transition-[visibility,transform,opacity] duration-300 aria-[hidden=true]:invisible aria-[hidden=true]:-translate-y-4 aria-[hidden=true]:opacity-0"
  aria-hidden="true"
>
  <ul class="flex flex-col">
    {
      navigationLinks.map(({ href, text }) => (
        <li>
          <NavLink {href} class="flex h-12 items-center px-4" aria-label={text}>
            {text}
          </NavLink>
        </li>
      ))
    }
  </ul>
</NavBar>

<script>
  const mobileMenu = document.getElementById('mobile-menu') as HTMLDivElement;

  const hamburgerButton = document.querySelector(
    '[aria-controls="mobile-menu"]',
  ) as HTMLButtonElement;

  let isExpanded = false;

  function handleClick(event: MouseEvent) {
    if (!isExpanded) return;

    const { clientX, clientY, target } = event;
    const { left, right, top, bottom } = mobileMenu.getBoundingClientRect();

    const isClickOutsideMenu =
      clientX < left || clientX > right || clientY < top || clientY > bottom;

    if (isClickOutsideMenu && !hamburgerButton.contains(target as Node)) {
      closeMenu();
    }
  }

  function openMenu() {
    mobileMenu.setAttribute('aria-hidden', 'false');
    hamburgerButton.setAttribute('aria-expanded', 'true');
    hamburgerButton.setAttribute('aria-label', 'close menu');
    isExpanded = true;
  }

  function closeMenu() {
    mobileMenu.setAttribute('aria-hidden', 'true');
    hamburgerButton.setAttribute('aria-expanded', 'false');
    hamburgerButton.setAttribute('aria-label', 'open menu');
    isExpanded = false;
  }

  function toggleMenu() {
    if (isExpanded) {
      closeMenu();
    } else {
      openMenu();
    }
  }

  hamburgerButton.addEventListener('click', toggleMenu);

  document.addEventListener('astro:page-load', closeMenu);

  document.addEventListener('click', handleClick);
</script>
