---
import NavBar from '@/components/nav-bar.astro';
import NavLink from '@/components/nav-link.astro';

type Props = {
  links: {
    href: string;
    text: string;
  }[];
};

const { links } = Astro.props;
---

<div
  id="mobile-menu"
  class="group absolute right-2 top-[calc(var(--header-height)-0.5rem)] z-40 w-36 overflow-hidden rounded-xl border border-white/10 bg-black/80 py-3 backdrop-blur-lg transition-[opacity,margin-top] duration-300 aria-[hidden=true]:invisible data-[expanded=false]:-mt-4 data-[expanded=false]:opacity-0"
  aria-hidden="true"
  data-expanded="false"
  data-mobile-menu
>
  <NavBar orientation="vertical" class="felx flex-col">
    {
      links.map(({ href, text }) => (
        <NavLink {href} class="flex h-12 items-center px-4">
          {text}
        </NavLink>
      ))
    }
  </NavBar>
</div>

<script>
  const mobileMenu = document.querySelector(
    '[data-mobile-menu]',
  ) as HTMLDivElement;

  const hamburgerButton = document.querySelector(
    '[data-hamburger-button]',
  ) as HTMLButtonElement;

  let timeout: ReturnType<typeof setTimeout>;

  let isExpanded = false;

  const handleClick = (event: MouseEvent) => {
    if (!isExpanded) return;

    const { clientX, clientY, target } = event;
    const { left, right, top, bottom } = mobileMenu.getBoundingClientRect();

    const isClickOutsideMenu =
      clientX < left || clientX > right || clientY < top || clientY > bottom;

    if (isClickOutsideMenu && !hamburgerButton.contains(target as Node)) {
      close();
    }
  };

  function open() {
    hamburgerButton.setAttribute('aria-expanded', 'true');
    hamburgerButton.setAttribute('aria-label', 'close menu');

    mobileMenu.setAttribute('aria-hidden', 'false');
    mobileMenu.setAttribute('data-expanded', 'true');

    isExpanded = true;
  }

  function close() {
    hamburgerButton.setAttribute('aria-expanded', 'false');
    hamburgerButton.setAttribute('aria-label', 'open menu');

    mobileMenu.setAttribute('data-expanded', 'false');

    clearTimeout(timeout);
    timeout = setTimeout(() => {
      mobileMenu.setAttribute('aria-hidden', 'true');
    }, 300);

    isExpanded = false;
  }

  function toggle() {
    if (isExpanded) {
      close();
    } else {
      open();
    }
  }

  hamburgerButton.addEventListener('click', toggle);

  document.addEventListener('astro:page-load', close);

  document.addEventListener('click', handleClick);
</script>
